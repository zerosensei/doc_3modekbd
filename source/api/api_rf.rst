2.4G
######

2.4G设备端
============

设备初始化
----------

- 函数名

  ``void rf_dev_init(void)``  

数据是否加载
------------

- 函数名

  ``bool rf_port_is_data_loaded(void)``

- 参数

  +--------+--------------------+
  | param  | description        |
  +========+====================+
  | return | `true` 数据已加载  |
  +        +--------------------+
  |        | `false` 数据未加载 |
  +--------+--------------------+

加载数据
----------

- 函数名

  ``int rf_port_load_data(uint8_t type, uint8_t *data, size_t len)``

- 描述

  将数据加载到发送区，主循环中一直查询是否加载数据，若已加载则开启接收窗口等待dongle获取数据。

- 参数
  
  +--------+-------------------------+
  | param  | description             |
  +========+=========================+
  | type   | 数据类型                |
  +--------+-------------------------+
  | data   | 数据首地址              |
  +--------+-------------------------+
  | len    | 数据长度                |
  +--------+-------------------------+
  | return | `0` 加载成功            |
  +        +-------------------------+
  |        | `-RF_EMSGSIZE` 数据过长 |
  +--------+-------------------------+

打开接收窗口
------------

- 函数名

  ``void rf_port_rcv_open(int timeout_us)``

- 描述
  
  打开接收窗口等待dongle发送数据，收到dongle数据将发送区数据发送至dongle。

- 参数
  
  +------------+------------------+
  | param      | description      |
  +============+==================+
  | timeout_us | 接收窗口开启时间 |
  +------------+------------------+

2.4Gdongle端
==============

dongle初始化
-------------

- 函数名

  ``void rf_dongle_init(void)``

加载请求
-------------

- 函数名

  ``int rf_port_load_data_irq(uint8_t type, uint8_t *user_data, size_t uesr_len)``

- 描述

  加载请求（如请求键值，请求配对等）和用户数据（如USB OUT的点灯命令）至发送缓冲区。

  **注：此函数具线程保护，可在中断中直接调用。**

- 参数

  +-----------+-----------------------------+
  | param     | description                 |
  +===========+=============================+
  | type      | 请求类型                    |
  +-----------+-----------------------------+
  | user_data | 用户数据首地址              |
  +-----------+-----------------------------+
  | uesr_len  | 用户数据长度                |
  +-----------+-----------------------------+
  | return    | `0` 加载成功                |
  +           +-----------------------------+
  |           | `-RF_EMSGSIZE` 用户数据过长 |
  +-----------+-----------------------------+

发送请求
--------

- 函数名
  
  ``int rf_port_send_request_irq(uint8_t dev)``

- 描述
  
  向指定设备发送发送缓冲区中的数据，发送完成后自动打开接收窗口等待设备应答。

  **注：此函数具线程保护，可在中断中直接调用。**

- 参数
  
  +--------+-------------------------------+
  | param  | description                   |
  +========+===============================+
  | dev    | 设备号                        |
  +--------+-------------------------------+
  | return | `0` 发送成功                  |
  +        +-------------------------------+
  |        | `-RF_ENOBUFS` 接收缓冲区不足  |
  +        +-------------------------------+
  |        | `-RF_EACCES` 正在发送或接收   |
  +        +-------------------------------+
  |        | `-RF_EINVAL` 接收数据地址无效 |
  +--------+-------------------------------+