数据帧格式
##############

数据存储
========

环形缓冲区键值存储帧格式
-------------------------

环形缓冲区中存储的值为键值，格式如下：

+--------------+--------------------+-------------+
| 键值类型     | report id (1 byte) | data(bytes) |
+--------------+--------------------+-------------+
| 多媒体       | 2                  | 2 bytes     |
+--------------+--------------------+-------------+
| 普通键盘键值 | 0                  | 8 bytes     |
+--------------+--------------------+-------------+
| 位键盘键值   | 1                  | 16 bytes    |
+--------------+--------------------+-------------+
| 系统按键     | 3                  | 2 bytes     |
+--------------+--------------------+-------------+

DATA FLASH配置信息存储
----------------------

DATA FLASH存储管理使用的是开源项目 `EasyFlash <https://github.com/armink/EasyFlash>`_。

其具备以下特性：

- 更小的资源占用，内存占用 几乎为 0 
- ENV 的值类型支持 任意类型 、任意长度，相当于直接 memcpy 变量至 flash
- ENV 操作效率比以前的模式高，充分利用剩余空闲区域，擦除次数及操作时间显著降低
- 原生支持 磨损平衡、掉电保护功能 


数据传输
========

USB模式和BLE模式均按照标准的协议传输，但键盘与2.4G接收器之间的通讯为自定义的协议，所以这里主要介绍2.4G传输的数据格式。

帧格式：

+-------------+--------------+---------------------+-----------------+-------------------------+---------------------------+
| 帧格式      | 包序号 (idx) | 设备标志 (dev_flag) | 数据类型 (type) | 用户数据长度 (user_len) | 用户数据 (user_data[200]) |
+-------------+--------------+---------------------+-----------------+-------------------------+---------------------------+
| 大小 (byte) | 1            | 1                   | 1               | 1                       | 200                       |
+-------------+--------------+---------------------+-----------------+-------------------------+---------------------------+

设备标志：

+----------+------+
| 设备标志 | 值   |
+==========+======+
| 键盘设备 | 1<<0 |
+----------+------+
| 鼠标设备 | 1<<1 |
+----------+------+

数据类型：

+------------+-----+
| 数据类型   | 值  |
+============+=====+
| 配对请求   | 0   |
+------------+-----+
| 键值请求   | 1   |
+------------+-----+
| 配对命令   | 2   |
+------------+-----+
| 键值命令   | 3   |
+------------+-----+
| 心跳包命令 | 4   |
+------------+-----+



