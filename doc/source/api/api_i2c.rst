I2C
#####

初始化I2C
===========

- 函数名

``void myi2c_Init(void)``

关闭I2C
===========

- 函数名

``void twi_disable(void)``

设置总线地址
============

- 函数名

``void twi_setAddress(uint8_t address)``

- 参数

+---------+-------------+
| param   | description |
+=========+=============+
| address | 总线地址    |
+---------+-------------+


主机发送
===========

发送初始化
-----------

- 函数名

  ``void myi2c_beginTransmission(uint8_t address)``

- 参数

  +---------+------------------+
  | param   | description      |
  +=========+==================+
  | address | 目标从机设备地址 |
  +---------+------------------+

发送完成
-----------

- 函数名

  ``uint8_t myi2c_endTransmission(bool sendStop)``

- 参数

  +----------+-------------------------+
  | param    | description             |
  +==========+=========================+
  | sendStop | `0` 不产生停止信号      |
  |          +-------------------------+
  |          | `1` 产生停止信号        |
  +----------+-------------------------+
  | return   | `0` 发送成功            |
  |          +-------------------------+
  |          | `1` 发送数据长度过长    |
  |          +-------------------------+
  |          | `2` 接收到NACK          |
  |          +-------------------------+
  |          | `3` 其他错误，如总线丢失|
  +----------+-------------------------+

装载数据
-----------

- 函数名

  ``size_t myi2c_write(uint8_t data)``

- 参数

  +--------+------------------+
  | param  | description      |
  +========+==================+
  | data   | 主机发送数据     |
  +--------+------------------+
  | return | `0` 填入数据失败 |
  +        +------------------+
  |        | `1` 填入数据成功 |
  +--------+------------------+


主机接收
============

数据接收
---------

- 函数名

  ``uint8_t myi2c_requestFrom(uint8_t address, uint8_t quantity, uint32_t iaddress, uint8_t isize, uint8_t sendStop)``

- 参数

  +----------+---------------------+
  | param    | description         |
  +==========+=====================+
  | address  | 目标从机设备地址    |
  +----------+---------------------+
  | quantity | 接收数据长度        |
  +----------+---------------------+
  | iaddress | 目标从机寄存器地址  |
  +----------+---------------------+
  | isize    | 寄存机地址大小      |
  +----------+---------------------+
  | sendStop | ` 0` 不产生停止信号 |
  +          +---------------------+
  |          | `1` 产生停止信号    |
  +----------+---------------------+
  | return   | 接收字节长度        |
  +----------+---------------------+

读取数据
----------

- 函数名

  ``int myi2c_read(void)``

- 参数

  +--------+----------------+
  | param  | description    |
  +========+================+
  | return | 接收FIFO中数据 |
  +--------+----------------+

  **注：此函数只能在从机接收回调函数中，或在调用** ``myi2c_requestFrom()`` **函数后使用。**



从机发送
============

从机发送回调函数
-------------------

- 函数名

  ``void RequestCB(void)``

- 从机发送队列填充函数

- 函数名

  ``uint8_t twi_transmit(const uint8_t* data, uint8_t length)``

- 参数

  +--------+--------------------+
  | param  | description        |
  +========+====================+
  | data   | 指向数据数组的指针 |
  +--------+--------------------+
  | length | 数据数组中字节数   |
  +--------+--------------------+
  | return | `0` success        |
  +        +--------------------+
  |        | `1` 数据过长       |
  +        +--------------------+
  |        | `2` 非从机发送模式 |
  +--------+--------------------+

  **注：此函数必须在从机发送事件的回调函数中使用。**



从机接收
============

从机接收回调函数
------------------

- 函数名

  ``void ReceiveCB( int len)``

- 参数

  +-------+------------------+
  | param | description      |
  +=======+==================+
  | len   | 从机接收数据长度 |
  +-------+------------------+

从机接收数据读取函数
---------------------

- 函数名

  ``int myi2c_read(void)``

- 参数

  +--------+----------------+
  | param  | description    |
  +========+================+
  | return | 接收FIFO中数据 |
  +--------+----------------+

  **注：此函数只能在从机接收回调函数中，或在调用** ``myi2c_requestFrom()`` **函数后使用。**